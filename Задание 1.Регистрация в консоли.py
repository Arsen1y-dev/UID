import re

def login_(login):
    return re.match(r'^[a-zA-Z0-9]{5,}$', login)

def password_(password):
    return re.match(r'^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$', password)

def email_(email):
    return re.match(r'^[^@]+@[^@]+\.[^@]+$', email)

def phone_(phone):
    return re.match(r'^(\+7|8)[\d ]{10}$', phone)

def registration():
    login = input("Введите логин: ")
    while not login_(login):
        print("Логин должен состоять не менее чем из 5 символов из набора латинских букв и цифр.")
        login = input("Введите логин: ")

    password = input("Введите пароль: ")
    while not password_(password):
        print("Пароль должен состоять не менее чем из 8 символов, содержать строчные и прописные буквы, цифру и специальный символ.")
        password = input("Введите пароль: ")

    password_repeat = input("Повторите пароль: ")
    while password != password_repeat:
        print("Пароли не совпадают.")
        password = input("Введите пароль: ")
        password_repeat = input("Повторите пароль: ")

    email = input("Введите адрес электронной почты: ")
    while not email_(email):
        print("Некорректный адрес электронной почты.")
        email = input("Введите адрес электронной почты: ")

    phone = input("Введите номер телефона: ")
    while not phone_(phone):
        print("Некорректный номер телефона.")
        phone = input("Введите номер телефона: ")


    full_name = input("Введите ФИО (по желанию): ")
    city = input("Введите город (по желанию): ")
    about = input("Расскажите о себе (по желанию): ")

    with open("users.txt", "a") as file:
        file.write(f"Логин: {login}\nПароль: {password}\nEmail: {email}\nТелефон: {phone}\n")
        file.write(f"ФИО: {full_name}\nГород: {city}\nО себе: {about}\n\n")
    print("Регистрация прошла успешно.")

registration()


#1. Пароль должен содержать как минимум одну строчную букву [a-z].
#2. Пароль должен содержать как минимум одну заглавную букву [A-Z].
#3. Пароль должен содержать как минимум одну цифру [0-9].
#4. Пароль должен содержать как минимум один из символов: @, $, !, %, *, ?, &.
#5. Длина пароля должна быть не менее 8 символов {8,}.

#- ^ - указывает на начало строки.
#- (?=.*[a-z]) - это позитивный поиск вперед, который проверяет наличие хотя бы одной строчной буквы в пароле.
#- (?=.*[A-Z]) - также позитивный поиск вперед, который проверяет наличие хотя бы одной заглавной буквы.
#- (?=.*\d) - позитивный поиск вперед для наличия хотя бы одной цифры.
#- (?=.*[@$!%*?&]) - позитивный поиск вперед для наличия одного из перечисленных специальных символов.
#- [A-Za-z\d@$!%*?&]{8,} - означает любые буквы в верхнем и нижнем регистрах, цифры и специальные символы из списка, присутствие которых должно соответствовать предыдущим условиям и пароль должен содержать не менее 8 символов.
#- $ - указывает на конец строки.

#f-строки (formatted string literals) в Python - это специальный вид строковых литералов, 
#которые позволяют встраивать значения переменных или выражений непосредственно в строку 
#без необходимости использования конкатенации или методов форматирования строк.

#Чтобы создать f-строку, перед открывающей кавычкой строки добавляется префикс f или F, 
#а внутри строки можно использовать фигурные скобки {} для вставки выражений или значений переменных. 
#При этом выражения или переменные в фигурных скобках будут автоматически заменены на их значения в строке.

#Данный код выполняет операцию записи информации о пользователе в текстовый файл "users.txt" в режиме добавления ("a"), 
#а затем выводит сообщение о успешной регистрации.
#
#1. with open("users.txt", "a") as file: - Этот блок кода открывает файл "users.txt" в режиме добавления ("a"), 
#что позволяет добавлять данные в конец файла без удаления существующего содержимого. Файл остается открытым в контексте оператора with, что гарантирует его автоматическое закрытие после завершения работы в данном блоке кода.
#
#2. file.write(f"Логин: {login}\nПароль: {password}\nEmail: {email}\nТелефон: {phone}\n") - Здесь используется 
#f-строка для форматирования и записи информации о пользователе в файл. Переменные login, password, email и phone подставляются в строку с помощью фигурных скобок {}. 
#Каждая информационная строка завершается символом новой строки \n.
#
#3. file.write(f"ФИО: {full_name}\nГород: {city}\nО себе: {about}\n\n") - То же самое здесь: информация о ФИО, городе и о себе пользователя также добавляется в файл.
#
#4. print("Регистрация прошла успешно.") - После записи всей информации в файл выводится на экран сообщение "Регистрация прошла успешно." 
#для уведомления пользователя о завершении процесса регистрации.
